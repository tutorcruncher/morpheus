worker_processes 1;

user nobody nogroup;
pid /tmp/nginx.pid;
error_log /dev/stdout crit;

events {
  worker_connections 1024; # increase if you have lots of clients
  accept_mutex off; # set to 'on' if nginx worker_processes > 1
  # 'use epoll;' to enable for Linux 2.6+
  # 'use kqueue;' to enable for FreeBSD, OSX
}

http {
  include mime.types;
  # fallback in case we can't determine a type
  default_type application/octet-stream;

  log_format custom '$remote_addr request="$request" status=$status time=${request_time}s '
                    'request_size=$request_length response_size=$body_bytes_sent '
                    'agent="$http_user_agent"';
  access_log /dev/stdout custom;
  sendfile on;

  upstream app_server {
    server web:8000 fail_timeout=0;
  }

  server {
    listen 80 default_server;

    client_max_body_size 4G;

    keepalive_timeout 5;

    location /status {
      stub_status on;
      access_log off;
    }

    location / {
      proxy_set_header Host $http_host;
      proxy_set_header 'X-Request-Start' $msec;
      proxy_redirect off;
      proxy_pass http://app_server;
    }
  }
}
