version: '2.1'

volumes:
  es_data: {}
  es_snapshots: {}
  redis_data: {}
  pdf_data: {}
  test_data: {}

networks:
  public:
    driver: bridge
  private:
    driver: bridge
    internal: true

services:
  logs:
    image: gliderlabs/logspout
    environment:
      SYSLOG_HOSTNAME: 'morpheus'
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: always

  glances:
    image: nicolargo/glances:stable
    pid: host
    environment:
      GLANCES_OPT: '-w'
    hostname: morpheus
    ports:
    - 61208-61209:61208-61209
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
    - private
    depends_on:
    - logs

  elastic:
    build: elasticsearch
    environment:
    - cluster.name=docker-cluster
    - xpack.security.enabled=false
    - xpack.watcher.enabled=false
    - xpack.monitoring.enabled=false
    - xpack.graph.enabled=false
    - xpack.ml.enabled=false
    - "path.repo=[\"/snapshots\"]"
    restart: always
    volumes:
    - es_data:/usr/share/elasticsearch/data
    - es_snapshots:/snapshots
    networks:
    - public  # for sending backups to S3
    depends_on:
    - logs

  redis:
    image: redis:3.0-alpine
    volumes:
    - redis_data:/data
    restart: always
    networks:
    - private
    depends_on:
    - logs

  pdf:
    image: samuelcolvin/pydf:latest
    restart: always
    volumes:
    - pdf_data:/tmp/pydf_cache
    networks:
    - public  # to download assets
    - private
    depends_on:
    - logs

  web:
    image: morpheus
    hostname: morpheus-web
    environment:
      APP_AUTH_KEY: ${APP_AUTH_KEY}
      APP_MANDRILL_KEY: ${APP_MANDRILL_KEY}
      APP_USER_AUTH_KEY: ${APP_USER_AUTH_KEY}
      APP_REDIS_HOST: redis
      APP_ELASTIC_HOST: elastic
      APP_COMMIT: ${COMMIT}
      APP_RELEASE_DATE: ${RELEASE_DATE}
      APP_RAVEN_DSN: ${RAVEN_DSN}
      APP_HOST_NAME: ${APP_HOST_NAME}
      APP_ADMIN_BASIC_AUTH_PASSWORD: ${APP_ADMIN_BASIC_AUTH_PASSWORD}
      APP_PUBLIC_LOCAL_API_URL: ${APP_PUBLIC_LOCAL_API_URL}
      APP_S3_ACCESS_KEY: ${APP_S3_ACCESS_KEY}
      APP_S3_SECRET_KEY: ${APP_S3_SECRET_KEY}
#      APP_LOG_LEVEL: DEBUG
    restart: always
    networks:
    - public  # send sentry errors
    - private
    depends_on:
    - elastic
    - redis

  worker:
    image: morpheus
    hostname: morpheus-worker
    entrypoint:
    - ./run.py
    - worker
    environment:
      APP_AUTH_KEY: ${APP_AUTH_KEY}
      APP_MANDRILL_KEY: ${APP_MANDRILL_KEY}
      APP_USER_AUTH_KEY: ${APP_USER_AUTH_KEY}
      APP_REDIS_HOST: redis
      APP_ELASTIC_HOST: elastic
      APP_COMMIT: ${COMMIT}
      APP_RELEASE_DATE: ${RELEASE_DATE}
      APP_RAVEN_DSN: ${RAVEN_DSN}
      APP_HOST_NAME: ${APP_HOST_NAME}
      APP_ADMIN_BASIC_AUTH_PASSWORD: ${APP_ADMIN_BASIC_AUTH_PASSWORD}
      APP_PUBLIC_LOCAL_API_URL: ${APP_PUBLIC_LOCAL_API_URL}
#      APP_LOG_LEVEL: DEBUG
      CHECK: worker
    volumes:
    - test_data:/tmp/morpheus
    restart: always
    networks:
    - public  # to communicate with external services
    - private
    depends_on:
    - elastic
    - redis
